apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default  #name of the policy
  namespace: istio-system
spec:
  mtls:
    mode: STRICT

---
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: timeapi-ext
  namespace: istio-system
spec:
  hosts:
  - timeapi.io
  ports:
  - number: 80
    name: http
    protocol: HTTP
  - number: 443
    name: https
    protocol: HTTPS
  resolution: DNS
  location: MESH_EXTERNAL

---

apiVersion: telemetry.istio.io/v1alpha1
kind: Telemetry
metadata:
  name: mesh-default
  namespace: istio-system
spec:
  accessLogging:
    - providers:
      - name: envoy


    
#---
#apiVersion: security.istio.io/v1beta1
#kind: RequestAuthentication
#metadata:
#  name: jwt-token-req
#  namespace: istio-system
#spec:
#  selector:
#    matchLabels:
#      istio: ingressgateway
#  jwtRules:
#  - issuer: http://127.0.0.1:8080/realms/appcloak
#    jwksUri: http://keycloak-service.kcloak.svc.cluster.local:8080/realms/appcloak/protocol/openid-connect/certs
#    forwardOriginalToken: true
#    fromHeaders: 
#      - name: x-auth-request-access-token

---
#apiVersion: security.istio.io/v1
#kind: RequestAuthentication
#metadata:
#  name: jwt-db-req
#  namespace: appspace
#spec:
#  selector:
#    matchLabels:
#      app: api-db
#  jwtRules:
#  - issuer: http://127.0.0.1:8080/realms/appcloak
#    jwksUri: http://keycloak-service.kcloak.svc.cluster.local:8080/realms/appcloak/protocol/openid-connect/certs
#    forwardOriginalToken: true
#    fromHeaders: 
#      - name: x-auth-request-access-token

---
#apiVersion: networking.k8s.io/v1
#kind: NetworkPolicy
#metadata:
#  name: egress-lock
#  namespace: appspace
#spec:
#  podSelector: {}
#  policyTypes:
#  - Egress
#---
