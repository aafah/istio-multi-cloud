apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deplo
  labels:
    app: nginx-d
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-d
  template:
    metadata:
      labels:
        app: nginx-d
    spec:
      containers:
      - name: nginx-d
        image: nginx-image
        imagePullPolicy: Never
        ports:
        - containerPort: 80
--- 
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx-d
  type: LoadBalancer  #Accepts external request by assigning the service an IPaddr
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-deplo
  labels:
    app: react-fend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-fend
  template:
    metadata:
      labels:
        app: react-fend
    spec:
      containers:
      - name: react-fend
        image: react-image
        imagePullPolicy: Never
        ports:
        - containerPort: 3000
--- 
apiVersion: v1
kind: Service
metadata:
  name: react-service
spec:
  selector:
    app: react-fend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      #nodePort: 30000 #Port in which this Service at its IP addr is going to accept requ
      #RAnge 30000-32767
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-db-deplo
  labels:
    app: api-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-db
  template:
    metadata:
      labels:
        app: api-db
    spec:
      containers:
      - name: api-db
        image: microdb-image
        imagePullPolicy: Never
        ports:
        - containerPort: 3003
--- 
apiVersion: v1
kind: Service
metadata:
  name: api-db-service
spec:
  selector:
    app: api-db
  ports:
    - protocol: TCP
      port: 3003
      targetPort: 3003
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-two-deplo
  labels:
    app: api-two
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-two
  template:
    metadata:
      labels:
        app: api-two
    spec:
      containers:
      - name: api-two
        image: microtwo-image
        imagePullPolicy: Never
        ports:
        - containerPort: 3003
--- 
apiVersion: v1
kind: Service
metadata:
  name: api-two-service
spec:
  selector:
    app: api-two
  ports:
    - protocol: TCP
      port: 3002
      targetPort: 3002
