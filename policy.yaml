#Policy that by defaults denies all access
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: "deny-all"
  namespace: istio-system
spec: 
  {}
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: "in-two"
  namespace: appspace
spec:
  selector:
    matchLabels:
      app: api-two
  rules:

  #Routes coming from microdb
  - from:
    - source:
        principals: ["cluster.local/ns/appspace/sa/db-acc"]
    to:
    - operation:
        paths: ["/updates/*"]
        methods: ["DELETE"]

  #Routes coming from the gate
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        paths: ["/updates/*"]
        methods: ["GET", "POST"]

  #Routes coming from the probe
  - from:
    - source:
        principals: ["cluster.local/ns/appspace/sa/probe-acc"]
    to:
    - operation:
        methods: ["GET"]

---
apiVersion: "security.istio.io/v1beta1"
kind: "AuthorizationPolicy"
metadata:
  name: "gate-react"
  namespace: appspace
spec:
  selector:
    matchLabels:
      app: react-fend
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        methods: ["GET"]

---
apiVersion: "security.istio.io/v1beta1"
kind: "AuthorizationPolicy"
metadata:
  name: "allow-in-gate"
  namespace: istio-system
spec:
  selector:
    matchLabels:
      istio: ingressgateway
  action: CUSTOM
  provider:
    name: oauth2-proxy
  rules: 
    - to:
      - operation:
          notPaths: ["/oauth2/*"]
          paths: ["/*"]
   #- when:
   #   - key: request.auth.claims[realm_access][roles]
   #     values: ["Prime"]
   
---
apiVersion: "security.istio.io/v1beta1"
kind: "AuthorizationPolicy"
metadata:
  name: "allow-in-gate-oauth"
  namespace: istio-system
spec:
  selector:
    matchLabels:
      istio: ingressgateway
  action: ALLOW
  rules: 
    - to:
      - operation:
          paths: ["/oauth2/*"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: "in-db"
  namespace: appspace
spec:
  selector:
    matchLabels:
      app: api-db
  action: ALLOW
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        paths: ["/topics"]
        methods: ["GET", "POST"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: require-jwt-db
  namespace: appspace
spec:
  selector:
    matchLabels:
      app: api-db
  action: ALLOW
  rules:
  - from:
    - source:
        #principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
        principals: ["*"]
  - to:
    - operation:
        paths: ["/topics/*"]
        methods: ["DELETE"]
    when:
    - key: request.auth.claims[resource_access][appclient][roles]
      values: ["PRIME"]
    #- key: request.auth.claims[iss]
    #  values: ["http://127.0.0.1:8080/realms/appcloak"]
---
apiVersion: "security.istio.io/v1beta1"
kind: "AuthorizationPolicy"
metadata:
  name: "allow-proxy-in-gate"
  namespace: istio-system
spec:
  selector:
    matchLabels:
      istio: ingressgateway
  rules: 
    - {}
    #- from:
    #  - source:
    #      principals: ["cluster.local/ns/default/sa/oauth-acc"]